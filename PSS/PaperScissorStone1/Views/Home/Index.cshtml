@{
    ViewBag.Title = "Home Page";
}
@model PaperScissorStone1.Models.HomeViewModel
<div class="row">
    <div class="col-md-12">
        <h1 id="loginTitle">Login <span> <button class="btn" id="registerShowPanel" onclick="onclickSwapPanel(false)">Register?</button></span></h1>
        <div id="loginPanel">
            @using (Html.BeginForm("LoginRegister", "Home", FormMethod.Post))
            {
                @Html.CheckBox("IsLogin", Model.IsLogin, new { id = "isLogin", @class = "hidden" });
                <label for="loginName">Player name</label> @Html.TextBox("Name", Model.Name, new { id = "loginName", onkeyup = "onkeyupLogin(event)" })
                <label for="loginP">Password</label> @Html.Password("Password", string.Empty, new { id = "loginP", onkeyup = "onkeyupLogin(event)" })
                <br />
                <input class="btn animated rubberBand" id="loginBtn" type="submit" value="Login" />
            }
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            <h1 id="registerTitle">Register <span> <button class="btn" id="loginShowPanel" onclick="onclickSwapPanel(true)">Or login?</button></span></h1>             
            <div id="registerPanel">
                @using (Html.BeginForm("LoginRegister", "Home", FormMethod.Post))
                {
                    @Html.CheckBox("IsLogin", Model.IsLogin, new { id = "isLogin", @class = "hidden" });
                    <label for="registerName">Player name</label>@Html.TextBox("Name", Model.Name, new { id="registerName", onkeyup = "onkeyupRegister(event)" } )
                    <label for="registerP1">Password</label>@Html.Password("Password", string.Empty, new { id = "registerP1", onkeyup = "onkeyupRegister(event)" } )
                    <label for="registerP2">Confirm password</label>@Html.Password("ConfirmPassword", string.Empty, new { id = "registerP2", onkeyup = "onkeyupRegister(event)" } )
                    <br />
                    <input class="btn animated rubberBand" id="registerBtn" type="submit" value="Register" />
                }
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <h3 id="error"></h3>
    </div>
</div>
@section scripts {
<script>
    $(document).ready(function () {
        $('#loginPanel').hide();
        $('#registerShowPanel').hide();
        $('#loginTitle').hide();

        setUiHintLogin(false);
        setUiHintRegister(false);

        @if (Model.Errors != null && Model.Errors.Any()) {
            @:$('#error').text('@string.Join("<br />", Model.Errors)');
        }
        //$('#loginBtn').prop('disabled', true);
        //$('#registerBtn').prop('disabled', true);
    });

    function toggler(divId) {
        $("#" + divId).slideToggle();
    }

    function onclickSwapPanel(isLogin) {
        toggler('loginTitle');
        toggler('registerTitle');
        toggler('loginShowPanel');
        toggler('registerShowPanel');
        toggler('loginPanel');
        toggler('registerPanel');

        $('#isLogin')[0].checked = isLogin;

        if (isLogin) {
            setUiHintLogin(validateLogin());
        } else {
            setUiHintRegister(validateRegister());
        }
    }

    // note to self: http://bradwilson.typepad.com/blog/2010/10/mvc3-unobtrusive-validation.html

    function validateLogin() {
        return ($('#loginName').val().length > 0
            && $('#loginP').val().length > 0);
    }

    function validateRegister() {
        var somethingEntered = ($('#registerName').val().length > 0
            && $('#registerP1').val().length > 0);

        var pwMatch = ($('#registerP1').val() == $('#registerP2').val());

        return (somethingEntered && pwMatch);
    }

    function setUiHintLogin(isValid) {
        $('#loginBtn').attr('type', isValid ? 'submit' : 'button');
        $('#error').text(isValid ? '' : 'Required name and password');
    }

    function setUiHintRegister(isValid) {
        $('#registerBtn').attr('type', isValid ? 'submit' : 'button');
        $('#error').text(isValid ? '' : 'Required name & password, and passwords must match');
    }
    
    function onkeyupLogin() {
        var isValid = validateLogin();
        setUiHintLogin(isValid);
    }

    function onkeyupRegister() {
        var isValid = validateRegister();
        setUiHintRegister(isValid);
    }

</script>
}