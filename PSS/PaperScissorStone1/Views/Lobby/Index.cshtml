@model PaperScissorStone1.Models.LobbyViewModel

@{
    ViewBag.Title = "View";
}

<h2>Lobby</h2>
<ul id="playerList">
    @foreach (var p in Model.Players) {
        if (p.Id != Model.Id) {
            var htmlId = string.Format("Pl{0}", p.Id);
            <li id="@htmlId">
                @p.Name <button class="btn" onclick="onclickChallenge(@p.Id)">Challenge!</button> 
            </li>
        }
    }
</ul>

<div id="challengers">

</div>

<h2>Chat</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

@Scripts.Render("~/bundles/jquery")
@section scripts {
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var lobbyUpdate = null;
        
        $(document).ready(function () {
            // Reference the auto-generated proxy for the hub.
            lobbyUpdate = $.connection.lobbyHub;
            // Create a function that the hub can call back to display messages.
            lobbyUpdate.client.addPlayer = function (id, name) {
                if (id !== @Model.Id)
                    $('#playerList').append(makeListItem(id, name));
            };
            lobbyUpdate.client.removePlayer = function (id) { 
                $('li#' + makeHtmlId(id)).remove();
            };
            lobbyUpdate.client.newMessage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            lobbyUpdate.client.startChallenge = function(challengeById, challengeByName) {
                $('#challengers').append(makeChallengeAcceptBtn(challengeById, challengeByName));
            };
            $.connection.hub.start().done(function () {
                // add ourselves to the lobby
                lobbyUpdate.server.addPlayer(@Model.Id, '@Model.Name');

                // jQuery event hooking here?

                // auto remove ourselves from the lobby
                window.onbeforeunload = function (e) {
                    lobbyUpdate.server.removePlayer(@Model.Id);
                };

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    lobbyUpdate.server.send('@Model.Name', $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function makeHtmlId(id) {
            return 'Pl' + id.toString();
        }

        function makeChallengeAcceptBtn(challengeById, challengeByName) {
            return '<button class="btn" onclick="onclickAcceptChallenge('+challengeById+')">Accept challenge by ' + challengeByName + '</button>';
        }

        function makeListItem(id, name) {
            var htmlId = makeHtmlId(id);
            var htmlLi = '<li id="' + htmlId + '">' + 
                htmlEncode(name) + 
                ' <button class="btn" onclick="onclickChallenge(' + id + ')">Challenge!</button>' +
                '</li>';

            return htmlLi;
        }

        function onclickChallenge(theirId) {
            lobbyUpdate.server.startChallenge(@Model.Id, '@Model.Name', theirId);
        }

        function onclickAcceptChallenge(challengeById) {
            console.log('challenge from ' + challengeById + 'accepted ');
        }
    </script>
}